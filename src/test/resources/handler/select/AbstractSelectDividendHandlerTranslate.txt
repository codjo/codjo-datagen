package generated; 
import net.codjo.database.api.Database;
import net.codjo.mad.server.handler.XMLUtils;
import net.codjo.mad.server.handler.select.AbstractSelectHandler;
import net.codjo.mad.server.handler.select.Getter;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 *  Classe Handler de selection abstraite pour generated.Dividend.
 */
public abstract class AbstractSelectDividendHandler extends AbstractSelectHandler<Dividend> {
    protected AbstractSelectDividendHandler(int queryType,
                                            String selectQuery,
                                            Database database) {
        super(queryType,
              selectQuery,
              new String[]{"portfolioCode"},
              database);

        addGetter("portfolioCode",
            new Getter<Dividend>(1, java.sql.Types.VARCHAR) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getPortfolioCode());
                }
            });

        addGetter("netDividend",
            new Getter<Dividend>(2) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getNetDividend());
                }
            });

        addGetter("dividendDate",
            new Getter<Dividend>(3, java.sql.Types.DATE) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getDividendDate());
                }
            });

        addGetter("automaticUpdate",
            new Getter<Dividend>(4) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getAutomaticUpdate());
                }
            });

        addGetter("createdBy",
            new Getter<Dividend>(5, java.sql.Types.VARCHAR) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getAudit().getCreatedBy());
                }
            });

        addGetter("updatedBy",
            new Getter<Dividend>(6, java.sql.Types.VARCHAR) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getAudit().getUpdatedBy());
                }
            });

        addGetter("last",
            new Getter<Dividend>(7) {
                @Override
                public String get(Dividend dv) {
                    return XMLUtils.convertToStringValue(dv.getLast());
                }
            });

    }
}
